<script type="text/javascript">
        var edges;
        var nodes;
        var network;
        var container;
        var options, data;

        // This method is responsible for drawing the graph, returns the drawn network
        function drawGraph() {
            var container = document.getElementById('mynetwork');


            // parsing and collecting nodes and edges from the python
            nodes = new vis.DataSet([
            {"group": 1, "id": 0, "label": 0, "shape": "dot", "size": 10, "title": "1"},
            {"group": 1, "id": 1, "label": 1, "shape": "dot", "size": 10, "title": "2"},
            {"group": 1, "id": 2, "label": 2, "shape": "dot", "size": 10, "title": "3"},
            {"group": 1, "id": 3, "label": 3, "shape": "dot", "size": 10, "title": "4"},
            {"group": 2, "id": 4, "label": 4, "shape": "dot", "size": 10, "title": "5"},
            {"group": 2, "id": 5, "label": 5, "shape": "dot", "size": 10, "title": "6"},
            {"group": 2, "id": 6, "label": 6, "shape": "dot", "size": 10, "title": "7"},
            {"group": 3, "id": 7, "label": 7, "shape": "dot", "size": 10, "title": "8"},
            {"group": 4, "id": 8, "label": 8, "shape": "dot", "size": 10, "title": "9"},
            {"group": 4, "id": 9, "label": 9, "shape": "dot", "size": 10, "title": "10"},
            {"group": 4, "id": 10, "label": 10, "shape": "dot", "size": 10, "title": "11"},
            {"group": 4, "id": 11, "label": 11, "shape": "dot", "size": 10, "title": "12"},
            {"group": 4, "id": 12, "label": 12, "shape": "dot", "size": 10, "title": "13"},
            {"group": 4, "id": 13, "label": 13, "shape": "dot", "size": 10, "title": "14"},
            {"group": 4, "id": 14, "label": 14, "shape": "dot", "size": 10, "title": "15"},
            {"group": 4, "id": 15, "label": 15, "shape": "dot", "size": 10, "title": "16"},
            {"group": 4, "id": 16, "label": 16, "shape": "dot", "size": 10, "title": "17"},
            {"group": 4, "id": 17, "label": 17, "shape": "dot", "size": 10, "title": "18"},
            {"group": 4, "id": 18, "label": 18, "shape": "dot", "size": 10, "title": "19"},
            {"group": 4, "id": 19, "label": 19, "shape": "dot", "size": 10, "title": "20"},
            {"group": 4, "id": 20, "label": 20, "shape": "dot", "size": 10, "title": "21"},
            {"group": 4, "id": 21, "label": 21, "shape": "dot", "size": 10, "title": "22"},
            {"group": 4, "id": 22, "label": 22, "shape": "dot", "size": 10, "title": "23"},
            {"group": 5, "id": 23, "label": 23, "shape": "dot", "size": 10, "title": "24"},
            {"group": 5, "id": 24, "label": 24, "shape": "dot", "size": 10, "title": "25"},
            {"group": 5, "id": 25, "label": 25, "shape": "dot", "size": 10, "title": "26"},
            {"group": 5, "id": 26, "label": 26, "shape": "dot", "size": 10, "title": "27"},
            {"group": 5, "id": 27, "label": 27, "shape": "dot", "size": 10, "title": "28"},
            {"group": 5, "id": 28, "label": 28, "shape": "dot", "size": 10, "title": "29"},
            {"group": 6, "id": 29, "label": 29, "shape": "dot", "size": 10, "title": "30"},
            {"group": 7, "id": 30, "label": 30, "shape": "dot", "size": 10, "title": "31"},
            {"group": 8, "id": 31, "label": 31, "shape": "dot", "size": 10, "title": "32"},
            {"group": 9, "id": 32, "label": 32, "shape": "dot", "size": 10, "title": "33"},
        ]);
            edges = new vis.DataSet([
                            {"from": 0, "to": 1, "label": "0.0", "length": 100.0},
            {"from": 0, "to": 2, "label": "0.04", "length": 116.0},
            {"from": 0, "to": 3, "label": "0.0", "length": 100.0},
            {"from": 4, "to": 5, "label": "0.044444444444444446", "length": 117.77777777777777},
            {"from": 4, "to": 6, "label": "0.3118279569892473", "length": 224.73118279569894},
            {"from": 8, "to": 9, "label": "0.3561643835616438", "length": 242.46575342465752},
            {"from": 8, "to": 10, "label": "0.3561643835616438", "length": 242.46575342465752},
            {"from": 8, "to": 11, "label": "0.058823529411764705", "length": 123.52941176470588},
            {"from": 8, "to": 12, "label": "0.3561643835616438", "length": 242.46575342465752},
            {"from": 8, "to": 13, "label": "0.3561643835616438", "length": 242.46575342465752},
            {"from": 8, "to": 14, "label": "0.058823529411764705", "length": 123.52941176470588},
            {"from": 8, "to": 15, "label": "0.3561643835616438", "length": 242.46575342465752},
            {"from": 8, "to": 16, "label": "0.058823529411764705", "length": 123.52941176470588},
            {"from": 8, "to": 17, "label": "0.058823529411764705", "length": 123.52941176470588},
            {"from": 8, "to": 18, "label": "0.029411764705882353", "length": 111.76470588235294},
            {"from": 8, "to": 19, "label": "0.3561643835616438", "length": 242.46575342465752},
            {"from": 8, "to": 20, "label": "0.3561643835616438", "length": 242.46575342465752},
            {"from": 8, "to": 21, "label": "0.058823529411764705", "length": 123.52941176470588},
            {"from": 8, "to": 22, "label": "0.3561643835616438", "length": 242.46575342465752},
            {"from": 23, "to": 24, "label": "0.23333333333333334", "length": 193.33333333333331},
            {"from": 23, "to": 25, "label": "0.4", "length": 260.0},
            {"from": 23, "to": 26, "label": "0.4153846153846154", "length": 266.1538461538462},
            {"from": 23, "to": 27, "label": "0.03333333333333333", "length": 113.33333333333333},
            {"from": 23, "to": 28, "label": "0.03333333333333333", "length": 113.33333333333333},
            {"from": 0, "to": 4, "label": "0.0", "length": 30.0},
            {"from": 4, "to": 7, "label": "0.04", "length": 110.0},
            {"from": 7, "to": 8, "label": "0.04", "length": 110.0},
            {"from": 23, "to": 29, "label": "0.044444444444444446", "length": 118.88888888888889},
            {"from": 29, "to": 30, "label": "0.3010752688172043", "length": 632.1505376344086},
            {"from": 30, "to": 31, "label": "0.5319148936170213", "length": 1093.8297872340424},
            {"from": 32, "to": 0, "label": "0.3561643835616438", "length": 742.3287671232877},
]);
            data = {nodes: nodes, edges: edges};

                var options = {
                    "layout": {"randomSeed": 8}, 
                    "configure": {"enabled": false}, 
                    "edges": {
                        "color": {"inherit": true},
                        "smooth": {"enabled": true, "type": "dynamic"}
                    },
                    "interaction": {"dragNodes": true, 
                        "hideEdgesOnDrag": false, 
                        "hideNodesOnDrag": false, 
                        "navigationButtons": true}, 
                    "physics": {"enabled": true, 
                        "stabilization": {"enabled": true, 
                        "fit": true, 
                        "iterations": 1000, 
                        "onlyDynamicEdges": false, 
                        "updateInterval": 50}
                      }, 
                    "manipulation": {"editNode": true}
                };
                
                network = new vis.Network(container, data, options);

                return network;
            }

            var network = drawGraph();
    let value = document.getElementById("close");
      let val = value.innerText.split('\n');
      let tresval = [];
      let group_num = [];
      let API_list = [];
      let node_len = [];
      var i;
      for(i = 0;i<val.length - 1;i++){
        tresval.push(val[i].split(','));
      }
      for(i = 0;i<tresval.length - 1;i++){
        API_list.push(tresval[i][0].split(' '));
        group_num.push(tresval[i][1]);
        node_len.push(tresval[i][2].split(' '));
      }
    
    network.on("click", function (params) {
        var clickedNodes = nodes.get(params.nodes);
        if(clickedNodes.length != 0){
        document.getElementById("eventSpanHeading2").innerText = document.getElementById("eventSpanHeading").innerText;
        document.getElementById("eventTitle2").innerText = document.getElementById("eventTitle").innerText;
        document.getElementById("apiList2").innerText = document.getElementById("apiList").innerText;
        
        document.getElementById("eventSpanHeading").innerText = "Node Id : " + (clickedNodes[0].id).toString();
        document.getElementById("eventTitle").innerText = "Code Id : " + (API_list[clickedNodes[0].id][0]);
        let apil = "";
        for(var i = 1; i<API_list[clickedNodes[0].id].length;i++){
            if(API_list[clickedNodes[0].id][i] >= 1){
                apil += "API" + i + ", ";
            }
        }
        document.getElementById("apiList").innerText = "API List = {" + apil + "}";

        if(!document.getElementById("eventSpanHeading2").innerText === false){
          var nol = document.getElementById("eventSpanHeading").innerText.split(' : ');
          var nol2 = document.getElementById("eventSpanHeading2").innerText.split(' : ');
          var a = [];
          for(var i = 1; i<API_list[clickedNodes[0].id].length;i++){
            if(API_list[Number(nol[1])][i] >= 1 && API_list[Number(nol2[1])][i] >= 1){
                a.push("API" + i);
            }
          }
          document.getElementById("eventSpanHeading3").innerText = "Node-to-node matching API";
          console.log(a)
          if(a.length == 0){
            document.getElementById("apiList3").innerText = "There's no match";
          }else{
          document.getElementById("apiList3").innerText = a;
          }
        }
        }
        
      });</script>
      